// ====================================================================================================================
// check result
struct BadhronCheckResult {
	passed:  i32,
	failed:  i32,
	pending: i32
}

fn badhron_new_check_result() -> BadhronCheckResult {
	BadhronCheckResult {
		passed:  0,
		failed:  0,
		pending: 0
	}
}


// ====================================================================================================================
// suite result
struct BadhronSuiteResult {
	total_result: BadhronCheckResult,
	group_result: BadhronCheckResult,
	split_result: BadhronCheckResult,
	split_name:   &[u8],
	in_split:     bool,
	exit_status:  i32
}

fn badhron_new_suite_result() -> BadhronSuiteResult {
	BadhronSuiteResult{
		total_result: badhron_new_check_result(),
		group_result: badhron_new_check_result(),
		split_result: badhron_new_check_result(),
		split_name:   0 as &[u8],
		in_split:     false,
		exit_status:  0
	}
}


// ====================================================================================================================
// result handler
struct BadhronResultHandler {
	// check results
	passed:        fn() -> (),
	failed:        fn() -> (),
	pending :      fn() -> (),

	// splits
	begin_split:   fn(&[u8]) -> (),
	end_split:     fn() -> BadhronCheckResult,
	split_name:    fn() -> &[u8],

	// group
	begin_group:   fn(&[u8]) -> (),
	end_group:     fn() -> BadhronCheckResult,

	// total result
	print:         fn() -> (),
	total_result:  fn() -> BadhronCheckResult, // TODO remove

	// misc
	suite_id:      fn() -> u64,
	exit_status:   fn() -> i32
}

fn badhron_new_result_handler(suite: u64) -> BadhronResultHandler {
	let mut res = badhron_new_suite_result();
	BadhronResultHandler {
		// check results
		passed:        || {
			if res.in_split {
				res.split_result.passed++;
			} else {
				res.group_result.passed++;
			}
		},

		failed:        || {
			if res.in_split {
				res.split_result.failed++;
			} else {
				res.group_result.failed++;
			}
			res.exit_status = 1;
		},

		pending:       || {
			if res.in_split {
				res.split_result.pending++;
			} else {
				res.group_result.pending++;
			}
		},

		// splits
		begin_split:   |name| {
			badhron_add_subgroup(suite, name);
			res.split_name = name;
			res.in_split = true;
			res.split_result.passed   = 0;
			res.split_result.failed   = 0;
			res.split_result.pending  = 0;
		},

		end_split:     || {
			res.split_name = 0 as &[u8];
			res.in_split = false;
			res.total_result.passed  += res.split_result.passed;
			res.total_result.failed  += res.split_result.failed;
			res.total_result.pending += res.split_result.pending;
			badhron_set_subgroup_result(
				suite,
				res.split_result.passed,
				res.split_result.failed,
				res.split_result.pending
			);
			res.split_result
		},

		split_name:    || { res.split_name },

		// group
		begin_group:   |name| {
			badhron_add_group(suite, name);
			res.total_result.passed  = 0;
			res.total_result.failed  = 0;
			res.total_result.pending = 0;
			res.group_result.passed  = 0;
			res.group_result.failed  = 0;
			res.group_result.pending = 0;
			res.split_result.passed  = 0;
			res.split_result.failed  = 0;
			res.split_result.pending = 0;
			res.in_split             = false;
		},

		end_group:     || {
			badhron_set_group_result(
				suite,
				res.group_result.passed,
				res.group_result.failed,
				res.group_result.pending
			);
			res.group_result
		},

		// total result
		print:         || { badhron_print_suite(suite); },

		total_result:  || {
			res.total_result.passed  += res.group_result.passed;
			res.total_result.failed  += res.group_result.failed;
			res.total_result.pending += res.group_result.pending;
			res.total_result
		},

		suite_id:      || { suite },

		exit_status:   || { res.exit_status }
	}
}

extern "C" {
	fn badhron_create_suite() -> u64;
	fn badhron_delete_suite(u64) -> ();

	fn badhron_add_group(u64, &[u8]) -> ();
	fn badhron_add_subgroup(u64, &[u8]) -> ();

	fn badhron_set_group_result(u64, i32, i32, i32) -> ();
	fn badhron_set_subgroup_result(u64, i32, i32, i32) -> ();

	fn badhron_print_suite(u64) -> ();
}
