struct BadhronCheckResult {
	passed:  i32,
	failed:  i32,
	pending: i32
}

struct BadhronResultStack {
	push:       fn() -> (),
	pop:        fn() -> BadhronCheckResult,
	passed:     fn() -> (),
	failed:     fn() -> (),
	pending:    fn() -> (),
	exitstatus: fn() -> i32
}

struct BadhronResultStackElement {
	result: BadhronCheckResult,
	next:  &BadhronResultStackElement
}

fn badhron_new_check_result() -> BadhronCheckResult {
	BadhronCheckResult {
		passed:  0,
		failed:  0,
		pending: 0
	}
}

fn badhron_new_result_stack() -> BadhronResultStack {
	let mut head = BadhronResultStackElement{
		result: badhron_new_check_result(),
		next:   0 as &BadhronResultStackElement
	};
	let mut estat = 0;
	BadhronResultStack {
		push: || {
			let new_head = BadhronResultStackElement{
				result: badhron_new_check_result(),
				next:   &head
			};
			head = new_head;
		},

		pop: || {
			if head.next == 0 as &BadhronResultStackElement {
				badhron_new_check_result()
			} else {
				let old_head = head;
				head = *head.next;
				old_head.result
			}
		},

		passed:  || { head.result.passed++;  },
		failed:  || { head.result.failed++; estat = 1; },
		pending: || { head.result.pending++; },

		exitstatus: || estat
	}
}
