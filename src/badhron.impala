struct BadhronSuite {
	// context
	group:        fn(&[u8], fn() -> ()) -> (),
	subgroup:     fn(&[u8], fn() -> ()) -> (),

	// checks
	pending:      fn(&[u8]) -> (),
	assert_true:  fn(fn() -> bool) -> (),
	assert_false: fn(fn() -> bool) -> (),
	assert_bool:  fn(bool, fn() -> bool) -> (),
	assert_i64:   fn(i64,  fn() -> i64)  -> (),
	assert_i32:   fn(i32,  fn() -> i32)  -> (),
	assert_i16:   fn(i16,  fn() -> i16)  -> (),
	assert_i8:    fn(i8,   fn() -> i8)   -> (),
	assert_u64:   fn(u64,  fn() -> u64)  -> (),
	assert_u32:   fn(u32,  fn() -> u32)  -> (),
	assert_u16:   fn(u16,  fn() -> u16)  -> (),
	assert_u8:    fn(u8,   fn() -> u8)   -> (),
	assert_f64:   fn(f64,  fn() -> f64)  -> (),
	assert_f32:   fn(f32,  fn() -> f32)  -> (),

	// misc
	exitstatus:   fn() -> i32
}

fn badhron_suite() -> BadhronSuite {
	let res = badhron_new_result_stack();
	BadhronSuite {
		group:        |name, body| badhron_group(res, name, body),
		subgroup:                  badhron_subgroup,
		pending:      |name|       badhron_pending(res, name),
		assert_true:  |body|       badhron_assert_true(res, body),
		assert_false: |body|       badhron_assert_false(res, body),
		assert_bool:  |exp, body|  badhron_assert_bool(res, exp, body),
		assert_i64:   |exp, body|  badhron_assert_i64(res, exp, body),
		assert_i32:   |exp, body|  badhron_assert_i32(res, exp, body),
		assert_i16:   |exp, body|  badhron_assert_i16(res, exp, body),
		assert_i8:    |exp, body|  badhron_assert_i8(res, exp, body),
		assert_u64:   |exp, body|  badhron_assert_u64(res, exp, body),
		assert_u32:   |exp, body|  badhron_assert_u32(res, exp, body),
		assert_u16:   |exp, body|  badhron_assert_u16(res, exp, body),
		assert_u8:    |exp, body|  badhron_assert_u8(res, exp, body),
		assert_f64:   |exp, body|  badhron_assert_f64(res, exp, body),
		assert_f32:   |exp, body|  badhron_assert_f32(res, exp, body),
		exitstatus:                res.exitstatus
	}
}
