fn main(i32, &[&[u8]]) -> i32 {
	let sid = badhron_create_suite();
	let rh = badhron_new_result_handler(sid);
	let suite = badhron_new_suite(rh);

	rh.begin_group("group");

	with suite.assert_u64(42_u64) { 42_u64 }
	with suite.assert_u32(42_u32) { 42_u32 }
	with suite.assert_u16(42_u16) { 42_u16 }
	with suite.assert_u8 (42_u8 ) { 42_u8  }

	with suite.assert_u64(42_u64) { 43_u64 }
	with suite.assert_u32(42_u32) { 43_u32 }
	with suite.assert_u16(42_u16) { 43_u16 }
	with suite.assert_u8 (42_u8 ) { 43_u8  }

	let ok = result_equals(rh.end_group(), BadhronCheckResult{passed: 4, failed: 4, pending: 0});

	rh.print();
	badhron_delete_suite(rh.suite_id());
	if ok { 0 } else { 1 }
}
