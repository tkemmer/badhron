fn main(i32, &[&[u8]]) -> i32 {
	let sid = badhron_create_suite();
	let rh = badhron_new_result_handler(sid);
	let suite = badhron_new_suite(rh);

	rh.begin_group("group");

	with suite.assert_i64(42_i64) { 42_i64 }
	with suite.assert_i32(42_i32) { 42_i32 }
	with suite.assert_i16(42_i16) { 42_i16 }
	with suite.assert_i8 (42_i8 ) { 42_i8  }

	with suite.assert_i64(42_i64) { 43_i64 }
	with suite.assert_i32(42_i32) { 43_i32 }
	with suite.assert_i16(42_i16) { 43_i16 }
	with suite.assert_i8 (42_i8 ) { 43_i8  }

	with suite.assert_i64(42_i64) { -42_i64 }
	with suite.assert_i32(42_i32) { -42_i32 }
	with suite.assert_i16(42_i16) { -42_i16 }
	with suite.assert_i8 (42_i8 ) { -42_i8  }

	let ok = result_equals(rh.end_group(), BadhronCheckResult{passed: 4, failed: 8, pending: 0});

	rh.print();
	badhron_delete_suite(rh.suite_id());
	if ok { 0 } else { 1 }
}
