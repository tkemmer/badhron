fn main(i32, &[&[u8]]) -> i32 {
	let suite = badhron_create_suite();
	let rh = badhron_new_result_handler(suite);
	let mut ok = true;

	// passed
	rh.begin_group("group_passed");
	rh.passed();
	rh.passed();
	ok = ok &&
	     result_equals(rh.end_group(), BadhronCheckResult{passed: 2, failed: 0, pending: 0}) &&
	     rh.exit_status() == 0;

	// pending
	rh.begin_group("group_pending");
	rh.pending();
	rh.pending();
	ok = ok &&
	     result_equals(rh.end_group(), BadhronCheckResult{passed: 0, failed: 0, pending: 2}) &&
	     rh.exit_status() == 0;

	// failed
	rh.begin_group("group_failed");
	rh.failed();
	rh.failed();
	ok = ok &&
	     result_equals(rh.end_group(), BadhronCheckResult{passed: 0, failed: 2, pending: 0}) &&
	     rh.exit_status() != 0;

	// mixed
	rh.begin_group("group_mixed");
	rh.failed();
	rh.passed();
	rh.failed();
	rh.pending();
	rh.passed();
	ok = ok &&
	     result_equals(rh.end_group(), BadhronCheckResult{passed: 2, failed: 2, pending: 1}) &&
	     rh.exit_status() != 0;

	rh.print();
	badhron_delete_suite(suite);
	if ok { 0 } else { 1 }
}
